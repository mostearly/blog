{"version":3,"sources":["webpack:///./src/pages/404/index.tsx","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["all_name","all_desc","toOldName","hour","index","Math","floor","Number","name","length","desc","now","moment","o","format","className","classes","error404","title","style","fontSize","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","i","l","parseInt","value","arguments","that","this","valueOf","call","key","keys","split","j","constructor"],"mappings":"+OAMMA,EAAW,CACf,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEIC,EAAW,CACf,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAIK,SAASC,EAAUC,GACxB,IAAMC,EAAQC,KAAKC,OAAOC,OAAOJ,GAAQ,GAAK,GAC9C,MAAO,CACLK,KAAMR,EAASI,GAASJ,EAASS,OAAS,EAAIL,GAC9CM,KAAMT,EAASG,GAASH,EAASQ,OAAS,EAAIL,IAIlD,IAAMO,EAAMC,MACNC,EAAIX,EAAUS,EAAIG,OAAO,OAEhB,4BACb,kBAAC,IAAD,CAAWC,UAAWC,IAAQC,SAAUC,MAAO,SAC7C,8CACA,sCACA,uBAAGC,MAAO,CAAEC,SAAU,SAAWP,EAAEL,KAAnC,MAA4CK,EAAEH,MAC9C,uBAAGS,MAAO,CAAEC,SAAU,SAAWT,EAAIG,OAAO,oBAA5C,Q,kCCnDJ,IAAIO,EAAS,EAAQ,QACjBC,EAAM,EAAQ,QACdC,EAAM,EAAQ,QACdC,EAAoB,EAAQ,QAC5BC,EAAc,EAAQ,QACtBC,EAAQ,EAAQ,QAChBC,EAAO,EAAQ,QAAkBC,EACjCC,EAAO,EAAQ,QAAkBD,EACjCE,EAAK,EAAQ,QAAgBF,EAC7BG,EAAQ,EAAQ,QAAkBC,KAElCC,EAAUZ,EAAa,OACvBa,EAAOD,EACPE,EAAQF,EAAQG,UAEhBC,EALS,UAKId,EAAI,EAAQ,OAAR,CAA4BY,IAC7CG,EAAO,SAAUC,OAAOH,UAGxBI,EAAW,SAAUC,GACvB,IAAIC,EAAKjB,EAAYgB,GAAU,GAC/B,GAAiB,iBAANC,GAAkBA,EAAGjC,OAAS,EAAG,CAE1C,IACIkC,EAAOC,EAAOC,EADdC,GADJJ,EAAKJ,EAAOI,EAAGV,OAASD,EAAMW,EAAI,IACnBK,WAAW,GAE1B,GAAc,KAAVD,GAA0B,KAAVA,GAElB,GAAc,MADdH,EAAQD,EAAGK,WAAW,KACQ,MAAVJ,EAAe,OAAOK,SACrC,GAAc,KAAVF,EAAc,CACvB,OAAQJ,EAAGK,WAAW,IACpB,KAAK,GAAI,KAAK,GAAIH,EAAQ,EAAGC,EAAU,GAAI,MAC3C,KAAK,GAAI,KAAK,IAAKD,EAAQ,EAAGC,EAAU,GAAI,MAC5C,QAAS,OAAQH,EAEnB,IAAK,IAAoDO,EAAhDC,EAASR,EAAGS,MAAM,GAAIC,EAAI,EAAGC,EAAIH,EAAOzC,OAAc2C,EAAIC,EAAGD,IAIpE,IAHAH,EAAOC,EAAOH,WAAWK,IAGd,IAAMH,EAAOJ,EAAS,OAAOG,IACxC,OAAOM,SAASJ,EAAQN,IAE5B,OAAQF,GAGZ,IAAKT,EAAQ,UAAYA,EAAQ,QAAUA,EAAQ,QAAS,CAC1DA,EAAU,SAAgBsB,GACxB,IAAIb,EAAKc,UAAU/C,OAAS,EAAI,EAAI8C,EAChCE,EAAOC,KACX,OAAOD,aAAgBxB,IAEjBI,EAAaX,GAAM,WAAcS,EAAMwB,QAAQC,KAAKH,MAxCjD,UAwC6DlC,EAAIkC,IACpEjC,EAAkB,IAAIU,EAAKM,EAASE,IAAMe,EAAMxB,GAAWO,EAASE,IAE5E,IAAK,IAMgBmB,EANZC,EAAO,EAAQ,QAAoBnC,EAAKO,GAAQ,6KAMvD6B,MAAM,KAAMC,EAAI,EAAQF,EAAKrD,OAASuD,EAAGA,IACrC1C,EAAIY,EAAM2B,EAAMC,EAAKE,MAAQ1C,EAAIW,EAAS4B,IAC5C/B,EAAGG,EAAS4B,EAAKhC,EAAKK,EAAM2B,IAGhC5B,EAAQG,UAAYD,EACpBA,EAAM8B,YAAchC,EACpB,EAAQ,OAAR,CAAuBZ,EAxDZ,SAwD4BY","file":"component---src-pages-404-index-tsx-482f43bf4fa61dbac895.js","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\nimport Container from '@/component/container'\r\n\r\nimport classes from './index.styl'\r\n\r\nconst all_name = [\r\n  '子',\r\n  '丑',\r\n  '寅',\r\n  '卯',\r\n  '辰',\r\n  '巳',\r\n  '午',\r\n  '未',\r\n  '申',\r\n  '酉',\r\n  '戌',\r\n  '亥'\r\n]\r\nconst all_desc = [\r\n  '夜半',\r\n  '荒鸡',\r\n  '平旦',\r\n  '破晓',\r\n  '早食',\r\n  '隅中',\r\n  '日正',\r\n  '日昳',\r\n  '夕食',\r\n  '日沉',\r\n  '黄昏',\r\n  '定昏'\r\n]\r\n// const all_number = ['零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖']\r\n\r\nexport function toOldName(hour: number | string) {\r\n  const index = Math.floor((Number(hour) + 1) / 2)\r\n  return {\r\n    name: all_name[index >= all_name.length ? 0 : index],\r\n    desc: all_desc[index >= all_desc.length ? 0 : index]\r\n  }\r\n}\r\n\r\nconst now = moment()\r\nconst o = toOldName(now.format('HH'))\r\n\r\nexport default () => (\r\n  <Container className={classes.error404} title={'找不到页面'}>\r\n    <h1>404 Not Found.</h1>\r\n    <p>页面已被遗忘.</p>\r\n    <p style={{ fontSize: '12px' }}>{o.name} · {o.desc}</p>\r\n    <p style={{ fontSize: '12px' }}>{now.format('YYYY.MM.DD HH.mm')} </p>\r\n  </Container>\r\n)\r\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}