{"componentChunkName":"component---src-templates-post-index-tsx","path":"/post/javascript-zhong-historypushstate-de-shiyong-jilu","result":{"data":{"markdownRemark":{"html":"<h3>history.pushState</h3>\n<p>html5定义了一个想浏览器历史追加状态的API,主要以此来实现浏览器前进后退和正常的一模一样. 它总共有三个参数:</p>\n<ol>\n<li>state 它是一个对象一般储存字符串[我出现过存HTML对象的,报错了~~,只能存字符串]</li>\n<li>title 它主要用来代表新页面的标题但被多数浏览器忽略,一般设置为null</li>\n<li>url 它代表新页面的URL,它会更新浏览器的url相对地址,但是不会验证是否为真实的,它只能设置相同的域名的URL,是不能将啥大网站的URL设置到你这的.</li>\n</ol>\n<p>一般将数据存储到state中,比如ajax获取到的页面.它只有640 kb大小的容量,所以如果想储存超过这个大小的数据可以存储在sessionStorage或者localStorage中,这俩有5 mb的容量</p>\n<h3>使用history.pushState和history.replaceState</h3>\n<p>这两个的功能分别是一个追加一个替换,就像盘子样一个忘上叠一个更换而浏览器就会显示最上面的盘子 他们的参数,设置方法都一样</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">var</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span><span class=\"token string\">\"http://???\"</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token operator\">:</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span>String\n<span class=\"token punctuation\">}</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>使用popstate监测浏览器前进后退</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onpopstate </span><span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token function\"> </span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">var</span> state <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">!==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>读取state里面的数据然后替换dom就可以了</p>\n<h3>其他</h3>\n<p>第一次追加记录时会导致回退时页面无变化,state没有值,所以第一次应该使用replaceState来替换</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">//写入历史记录</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">writeHistory</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>state<span class=\"token operator\">===</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       window<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">replaceState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n       window<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"9912982f-1f00-5823-ac33-b433502a7466","fields":{"title":"JavaScript中historyPushState的使用记录","tags":["JavaScript"],"category":"笔记","date":"2017-10-19T20:25:06+08:00","dateModified":"2017-10-19T20:25:06+08:00","slug":"/post/javascript-zhong-historypushstate-de-shiyong-jilu","status":true,"comment":true},"excerpt":"history.pushState html5定义了一个想浏览器历史追加状态的API…"}},"pageContext":{"slug":"/post/javascript-zhong-historypushstate-de-shiyong-jilu","prev":{"slug":"/post/geren-sikao-de-function-he-object-guanxi","title":"个人思考的function和object关系","date":"2017-09-13T11:31:57+08:00","category":"笔记","tags":["JavaScript"],"type":"post"},"next":{"slug":"/post/wenjianjia-tongji-he-shanchu-hanshu","title":"文件夹统计和删除函数","date":"2017-11-08T22:32:55+08:00","category":"笔记","tags":["PHP"],"type":"post"}}}}