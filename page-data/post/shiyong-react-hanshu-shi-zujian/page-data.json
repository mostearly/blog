{"componentChunkName":"component---src-templates-post-index-tsx","path":"/post/shiyong-react-hanshu-shi-zujian","result":{"data":{"markdownRemark":{"html":"<h1>使用React函数式组件</h1>\n<h2>前言</h2>\n<p>前天在写React某个Demo代码时发现React组件渲染了两次，开始以为是state原因，因为函数式组件不使用<code class=\"language-text\">useState</code>钩子只渲染了一次，但是我思考不明白为什么React类组件和使用了<code class=\"language-text\">useState</code>钩子，开始猜测为因为<code class=\"language-text\">state</code>原因，</p>\n<p>而后在StackOverflow上面询问才知道答案，是因为我使用了React严格模式，即使用<code class=\"language-text\">React.StrictMode</code>组件</p>\n<p>React StrictMode文档<a href=\"https://reactjs.org/docs/strict-mode.html\" target=\"_blank\" rel=\"noopener\">https://reactjs.org/docs/strict-mode.html</a></p>\n<p>文档上面给出了使用<code class=\"language-text\">React.StrictMode</code>的副作用</p>\n<blockquote>\n<p>Strict mode can’t automatically detect side effects for you, but it can help you spot them by making them a little more deterministic. This is done by intentionally double-invoking the following methods:</p>\n<ul>\n<li>Class component <code class=\"language-text\">constructor</code> method</li>\n<li>The <code class=\"language-text\">render</code> method</li>\n<li><code class=\"language-text\">setState</code> updater functions (the first argument)</li>\n<li>The static <code class=\"language-text\">getDerivedStateFromProps</code> lifecycle</li>\n<li>The <code class=\"language-text\">shouldComponentUpdate</code> method</li>\n</ul>\n</blockquote>\n<p>这次最大的问题还是出在大意上，在找问题时忽略了<code class=\"language-text\">index.js</code>，因为是使用<code class=\"language-text\">create-react-app</code>创建了，<code class=\"language-text\">App.js</code>和<code class=\"language-text\">index.js</code>都包含了<code class=\"language-text\">StrictMode</code></p>\n<h2>React函数组件在定时器获取State问题</h2>\n<iframe\n     src=\"https://codesandbox.io/embed/admiring-snowflake-vyv6g?autoresize=1&expanddevtools=1&fontsize=14&hidenavigation=1&theme=dark&view=preview\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"React function component gets state in timer\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>","id":"4732c608-65b0-527e-972f-90c63a9c6968","fields":{"title":"使用React函数式组件","tags":[],"category":"记录","date":"2020-03-25T00:25:24+08:00","dateModified":"2020-03-23T16:37:41+08:00","slug":"/post/shiyong-react-hanshu-shi-zujian","status":true,"comment":true},"excerpt":"使用React函数式组件 前言 前天在写React某个Demo代码时发现React…"}},"pageContext":{"slug":"/post/shiyong-react-hanshu-shi-zujian","prev":{"slug":"/post/wei-windows10wsl-shezhi-moren-yonghu","title":"为Windows10 WSL设置默认用户","date":"2020-03-13T21:51:00+08:00","category":"记录","tags":["WSL"],"type":"post"},"next":null}}}