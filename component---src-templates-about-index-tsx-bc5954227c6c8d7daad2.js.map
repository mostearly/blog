{"version":3,"sources":["webpack:///./src/templates/about/index.styl","webpack:///./src/component/light-box/index.styl","webpack:///./src/component/light-box/index.tsx","webpack:///./src/templates/about/index.tsx"],"names":["module","exports","uninstall","node","target","document","querySelector","classes","lightBox","unmountComponentAtNode","body","removeChild","documentElement","removeAttribute","LightBox","props","React","status","changeStatus","isError","changeIsError","onClick","className","lightBoxWrap","loadError","href","src","rel","classname","loading","show","onLoad","onError","img","alt","install","event","matches","currentTarget","parentNode","preventDefault","element","createElement","render","append","style","setProperty","posts","data","markdownRemark","path","about","title","fields","description","excerpt","content","installLightBox","dangerouslySetInnerHTML","__html","html","id","enable","comment","query"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,MAAQ,eAAe,MAAQ,eAAe,QAAU,mB,qBCA1ED,EAAOC,QAAU,CAAC,SAAW,mBAAmB,KAAO,cAAc,aAAe,wBAAwB,UAAY,oBAAoB,QAAU,iBAAiB,MAAQ,eAAe,KAAO,cAAc,KAAO,cAAc,IAAM,e,oCCD9O,+FAUO,SAASC,IACd,IANeC,EAMTC,EAASC,SAASC,cAAT,IAA2BC,IAAQC,UAC7CJ,IAPUD,EAQPC,EAPRK,iCAAuBN,GACvBE,SAASK,KAAKC,YAAYR,GAC1BE,SAASO,gBAAgBC,gBAAgB,UAyBpC,SAASC,EAASC,GAAsB,UACdC,YAAe,GAAvCC,EADsC,KAC9BC,EAD8B,OAEZF,YAAe,GAAzCG,EAFsC,KAE7BC,EAF6B,KAU7C,OACE,uBAAKC,QAASnB,EAAWoB,UAAWf,IAAQgB,cACzCJ,EACC,uBAAKG,UAAWf,IAAQiB,WACtB,mCACA,qBAAGC,KAAMV,EAAMW,IAAKtB,OAAO,SAASuB,IAAI,uBAAxC,SAKF,uBACEL,UAAWM,YAAUrB,IAAQsB,SAAT,OACjBtB,IAAQuB,MAAOb,EADE,KADtB,SAQF,uBACES,IAAKX,EAAMW,IACXK,OA3BS,WACbb,GAAa,IA2BTc,QAzBU,WACdZ,GAAc,GACdF,GAAa,IAwBTI,UAAWM,YAAUrB,IAAQ0B,KAAT,OACjB1B,IAAQuB,OAAQb,IAAWE,EADV,IAGpBe,IAAI,mBAKG,SAASC,EAAQC,GAG9B,IADA,IAAIhC,EAASgC,EAAMhC,QACXA,EAAOiC,QAAQ,6BAA6B,CAClD,GAAIjC,IAAWgC,EAAME,cAAe,OACpClC,EAASA,EAAOmC,WAElB,GAAKnC,GAA8B,iBAAbC,SAAtB,CACA+B,EAAMI,iBACN,IAAMC,EAAUpC,SAASqC,cAAc,OACvCD,EAAQnB,UAAYf,IAAQC,SAC5BmC,iBAAO,gBAAC7B,EAAD,CAAUY,IAAKtB,EAAOqB,OAAUgB,GACvCpC,SAASK,KAAKkC,OAAOH,GACrBpC,SAASO,gBAAgBiC,MAAMC,YAAY,WAAY,a,kCCtFzD,+HA0Be,mBAAC/B,GAAqB,IAETgC,EACtBhC,EADFiC,KAAQC,eAEV,OACE,kBAAC,IAAD,CACEC,KAAK,SACL5B,UAAWf,IAAQ4C,MACnBC,MAAOL,EAAMM,OAAOD,MACpBE,YAAaP,EAAMQ,SAEnB,iCACE,wBAAIjC,UAAWf,IAAQ6C,OAAQL,EAAMM,OAAOD,OAC5C,yBACE9B,UAAWf,IAAQiD,QACnBnC,QAASoC,IACTC,wBAAyB,CAAEC,OAAQZ,EAAMa,SAG7C,kBAAC,IAAD,CAASC,GAAId,EAAMc,GAAIC,OAAQf,EAAMM,OAAOU,YAI3C,IAAMC,EAAQ","file":"component---src-templates-about-index-tsx-bc5954227c6c8d7daad2.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"about__2qrDj\",\"title\":\"title__pc11o\",\"content\":\"content__1sJV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightBox\":\"light-box__1Tinu\",\"fade\":\"fade__2ueZW\",\"lightBoxWrap\":\"light-box-wrap__Jq2kF\",\"loadError\":\"load-error__FGcVm\",\"loading\":\"loading__1RWlq\",\"slide\":\"slide__1Aqp5\",\"hide\":\"hide__27A70\",\"show\":\"show__agC4j\",\"img\":\"img__35rPS\"};","import * as React from 'react'\r\nimport { render, unmountComponentAtNode } from 'react-dom'\r\nimport classes from './index.styl'\r\nimport classname from '@/utils/classname'\r\n\r\nconst unmount = (node) => {\r\n  unmountComponentAtNode(node)\r\n  document.body.removeChild(node)\r\n  document.documentElement.removeAttribute('style')\r\n}\r\nexport function uninstall() {\r\n  const target = document.querySelector(`.${classes.lightBox}`)\r\n  if (!target) return void 0\r\n  unmount(target)\r\n}\r\n\r\ninterface LightBoxProps {\r\n  src: string\r\n}\r\n// function getDelegateTarget<T extends HTMLElement>(\r\n//   target: any,\r\n//   currentTarget: any,\r\n//   classname: string\r\n// ): T | null {\r\n//   if (!target || !currentTarget) return null\r\n//   while (target !== currentTarget) {\r\n//     if (target.matches(classname)) {\r\n//       return target as T\r\n//     }\r\n//     target = target.parentNode as HTMLElement\r\n//   }\r\n//   return null\r\n// }\r\nexport function LightBox(props: LightBoxProps) {\r\n  const [status, changeStatus] = React.useState(true)\r\n  const [isError, changeIsError] = React.useState(false)\r\n  const onload = () => {\r\n    changeStatus(false)\r\n  }\r\n  const onerror = () => {\r\n    changeIsError(true)\r\n    changeStatus(false)\r\n  }\r\n  return (\r\n    <div onClick={uninstall} className={classes.lightBoxWrap}>\r\n      {isError ? (\r\n        <div className={classes.loadError}>\r\n          <p>图片加载失败</p>\r\n          <a href={props.src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            单击访问\r\n          </a>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={classname(classes.loading, {\r\n            [classes.show]: status\r\n          })}\r\n        >\r\n          图片加载中\r\n        </div>\r\n      )}\r\n      <img\r\n        src={props.src}\r\n        onLoad={onload}\r\n        onError={onerror}\r\n        className={classname(classes.img, {\r\n          [classes.show]: !status && !isError\r\n        })}\r\n        alt=\"preview image\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default function install(event) {\r\n  // 目前没发现a标签链接和img链接的区别\r\n  let target = event.target\r\n  while (!target.matches('a.gatsby-resp-image-link')) {\r\n    if (target === event.currentTarget) return void 0\r\n    target = target.parentNode\r\n  }\r\n  if (!target || typeof document !== 'object') return\r\n  event.preventDefault()\r\n  const element = document.createElement('div')\r\n  element.className = classes.lightBox\r\n  render(<LightBox src={target.href} />, element)\r\n  document.body.append(element)\r\n  document.documentElement.style.setProperty('overflow', 'hidden')\r\n}\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Container from '@/component/container'\r\nimport Comment from '@/component/comment'\r\nimport classes from './index.styl'\r\nimport installLightBox from '@/component/light-box'\r\n\r\ntype Fields = {\r\n  title: string\r\n  slug: string\r\n  status: boolean\r\n  comment: boolean\r\n}\r\ninterface PageProps {\r\n  data: {\r\n    markdownRemark: {\r\n      html: string\r\n      id: string\r\n      fields: Fields\r\n      excerpt: string\r\n    }\r\n  }\r\n  pageContext: {\r\n    slug: string\r\n  }\r\n}\r\nexport default (props: PageProps) => {\r\n  const {\r\n    data: { markdownRemark: posts }\r\n  } = props\r\n  return (\r\n    <Container\r\n      path=\"/about\"\r\n      className={classes.about}\r\n      title={posts.fields.title}\r\n      description={posts.excerpt}\r\n    >\r\n      <article>\r\n        <h1 className={classes.title}>{posts.fields.title}</h1>\r\n        <div\r\n          className={classes.content}\r\n          onClick={installLightBox}\r\n          dangerouslySetInnerHTML={{ __html: posts.html }}\r\n        />\r\n      </article>\r\n      <Comment id={posts.id} enable={posts.fields.comment} />\r\n    </Container>\r\n  )\r\n}\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      id\r\n      fields {\r\n        title\r\n        slug\r\n        status\r\n        comment\r\n      }\r\n      excerpt(pruneLength: 50)\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}